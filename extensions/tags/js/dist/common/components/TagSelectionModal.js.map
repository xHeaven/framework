{"version":3,"file":"common/components/TagSelectionModal.js","mappings":"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","sources":["webpack://@flarum/tags/./src/common/components/TagSelectionModal.tsx","webpack://@flarum/tags/./src/forum/components/ToggleButton.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport app from 'flarum/common/app';\nimport Button from 'flarum/common/components/Button';\nimport classList from 'flarum/common/utils/classList';\nimport extractText from 'flarum/common/utils/extractText';\nimport highlight from 'flarum/common/helpers/highlight';\nimport KeyboardNavigatable from 'flarum/common/utils/KeyboardNavigatable';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport FormModal from 'flarum/common/components/FormModal';\nimport Stream from 'flarum/common/utils/Stream';\nimport sortTags from '../utils/sortTags';\nimport tagLabel from '../helpers/tagLabel';\nimport tagIcon from '../helpers/tagIcon';\nimport ToggleButton from '../../forum/components/ToggleButton';\nexport default class TagSelectionModal extends FormModal {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"loading\", true);\n    _defineProperty(this, \"tags\", void 0);\n    _defineProperty(this, \"selected\", []);\n    _defineProperty(this, \"bypassReqs\", false);\n    _defineProperty(this, \"filter\", Stream(''));\n    _defineProperty(this, \"focused\", false);\n    _defineProperty(this, \"navigator\", new KeyboardNavigatable());\n    _defineProperty(this, \"indexTag\", void 0);\n  }\n  static initAttrs(attrs) {\n    super.initAttrs(attrs);\n\n    // Default values for optional attributes.\n    attrs.title ||= extractText(app.translator.trans('flarum-tags.lib.tag_selection_modal.title'));\n    attrs.canSelect ||= () => true;\n    attrs.allowResetting ??= true;\n    attrs.limits = {\n      min: {\n        total: attrs.limits?.min?.total ?? -Infinity,\n        primary: attrs.limits?.min?.primary ?? -Infinity,\n        secondary: attrs.limits?.min?.secondary ?? -Infinity\n      },\n      max: {\n        total: attrs.limits?.max?.total ?? Infinity,\n        primary: attrs.limits?.max?.primary ?? Infinity,\n        secondary: attrs.limits?.max?.secondary ?? Infinity\n      }\n    };\n\n    // Prevent illogical limits from being provided.\n    catchInvalidLimits(attrs.limits);\n  }\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.navigator.onUp(() => this.setIndex(this.getCurrentNumericIndex() - 1, true)).onDown(() => this.setIndex(this.getCurrentNumericIndex() + 1, true)).onSelect(this.select.bind(this)).onRemove(() => this.selected.splice(this.selected.length - 1, 1));\n    app.tagList.load(['parent']).then(tags => {\n      this.loading = false;\n      if (this.attrs.selectableTags) {\n        tags = this.attrs.selectableTags(tags);\n      }\n      this.tags = sortTags(tags);\n      if (this.attrs.selectedTags) {\n        this.attrs.selectedTags.map(this.addTag.bind(this));\n      }\n      this.indexTag = tags[0];\n      m.redraw();\n    });\n  }\n  className() {\n    return classList('TagSelectionModal Modal--simple', this.attrs.className);\n  }\n  title() {\n    return this.attrs.title;\n  }\n  lengthWithCJK(text) {\n    let length = 0;\n    for (const char of text) {\n      length += /[\\u4E00-\\u9FFF\\u3400-\\u4DBF\\uF900-\\uFAFF]/.test(char) ? 2 : 1;\n    }\n    return length;\n  }\n  content() {\n    if (this.loading || !this.tags) {\n      return m(LoadingIndicator, null);\n    }\n    const filter = this.filter().toLowerCase();\n    const primaryCount = this.primaryCount();\n    const secondaryCount = this.secondaryCount();\n    const tags = this.getFilteredTags();\n\n    // 1 CJK character's width equals to 2ch,\n    // so we count 1 CJK character as 2 characters.\n    const inputWidth = Math.max(this.lengthWithCJK(extractText(this.getInstruction(primaryCount, secondaryCount))), this.lengthWithCJK(this.filter()));\n    return [m(\"div\", {\n      className: \"Modal-body\"\n    }, m(\"div\", {\n      className: \"TagSelectionModal-form\"\n    }, m(\"div\", {\n      className: \"TagSelectionModal-form-input\"\n    }, m(\"div\", {\n      className: 'TagsInput FormControl ' + (this.focused ? 'focus' : ''),\n      onclick: () => this.$('.TagsInput input').focus()\n    }, m(\"span\", {\n      className: \"TagsInput-selected\"\n    }, this.selected.map(tag => m(\"span\", {\n      className: \"TagsInput-tag\",\n      onclick: () => {\n        this.removeTag(tag);\n        this.onready();\n      }\n    }, tagLabel(tag)))), m(\"input\", {\n      className: \"FormControl\",\n      placeholder: extractText(this.getInstruction(primaryCount, secondaryCount)),\n      bidi: this.filter,\n      style: {\n        width: inputWidth + 'ch'\n      },\n      onkeydown: this.navigator.navigate.bind(this.navigator),\n      onfocus: () => this.focused = true,\n      onblur: () => this.focused = false\n    }))), m(\"div\", {\n      className: \"TagSelectionModal-form-submit App-primaryControl\"\n    }, m(Button, {\n      type: \"submit\",\n      className: \"Button Button--primary\",\n      disabled: !this.meetsRequirements(primaryCount, secondaryCount),\n      icon: \"fas fa-check\"\n    }, app.translator.trans('flarum-tags.lib.tag_selection_modal.submit_button'))))), m(\"div\", {\n      className: \"Modal-footer\"\n    }, m(\"ul\", {\n      className: \"TagSelectionModal-list SelectTagList\"\n    }, tags.map(tag => m(\"li\", {\n      \"data-index\": tag.id(),\n      className: classList('SelectTagListItem', {\n        pinned: tag.position() !== null,\n        child: !!tag.parent(),\n        colored: !!tag.color(),\n        selected: this.selected.includes(tag),\n        active: this.indexTag === tag\n      }),\n      style: {\n        color: tag.color()\n      },\n      onmouseover: () => this.indexTag = tag,\n      onclick: this.toggleTag.bind(this, tag)\n    }, m(\"i\", {\n      className: \"SelectTagListItem-icon\"\n    }, tagIcon(tag, {\n      className: 'SelectTagListItem-tagIcon'\n    }), m(\"i\", {\n      className: \"icon TagIcon fas fa-check SelectTagListItem-checkIcon\"\n    })), m(\"span\", {\n      className: \"SelectTagListItem-name\"\n    }, highlight(tag.name(), filter)), tag.description() ? m(\"span\", {\n      className: \"SelectTagListItem-description\"\n    }, tag.description()) : ''))), this.attrs.limits.allowBypassing && m(\"div\", {\n      className: \"TagSelectionModal-controls\"\n    }, m(ToggleButton, {\n      className: \"Button\",\n      onclick: () => this.bypassReqs = !this.bypassReqs,\n      isToggled: this.bypassReqs\n    }, app.translator.trans('flarum-tags.lib.tag_selection_modal.bypass_requirements'))))];\n  }\n\n  /**\n   * Filters the available tags on every state change.\n   */\n  getFilteredTags() {\n    const filter = this.filter().toLowerCase();\n    const primaryCount = this.primaryCount();\n    const secondaryCount = this.secondaryCount();\n    let tags = this.tags;\n    if (this.attrs.requireParentTag) {\n      // Filter out all child tags whose parents have not been selected. This\n      // makes it impossible to select a child if its parent hasn't been selected.\n      tags = tags.filter(tag => {\n        const parent = tag.parent();\n        return parent !== null && (parent === false || this.selected.includes(parent));\n      });\n    }\n    if (!this.bypassReqs) {\n      // If we reached the total maximum number of tags, we can't select anymore.\n      if (this.selected.length >= this.attrs.limits.max.total) {\n        tags = tags.filter(tag => this.selected.includes(tag));\n      }\n      // If the number of selected primary/secondary tags is at the maximum, then\n      // we'll filter out all other tags of that type.\n      else {\n        if (primaryCount >= this.attrs.limits.max.primary) {\n          tags = tags.filter(tag => !tag.isPrimaryParent() || this.selected.includes(tag));\n        }\n        if (secondaryCount >= this.attrs.limits.max.secondary) {\n          tags = tags.filter(tag => tag.isPrimaryParent() || this.selected.includes(tag));\n        }\n      }\n    }\n\n    // If the user has entered text in the filter input, then filter by tags\n    // whose name matches what they've entered.\n    if (filter) {\n      tags = tags.filter(tag => tag.name().toLowerCase().includes(filter));\n    }\n    if (!this.indexTag || !tags.includes(this.indexTag)) this.indexTag = tags[0];\n    return tags;\n  }\n\n  /**\n   * Counts the number of selected primary tags.\n   */\n  primaryCount() {\n    return this.selected.filter(tag => tag.isPrimaryParent()).length;\n  }\n\n  /**\n   * Counts the number of selected secondary tags.\n   */\n  secondaryCount() {\n    return this.selected.filter(tag => !tag.isPrimaryParent()).length;\n  }\n\n  /**\n   * Validates the number of selected primary/secondary tags against the set min max limits.\n   */\n  meetsRequirements(primaryCount, secondaryCount) {\n    if (this.bypassReqs || this.attrs.allowResetting && this.selected.length === 0) {\n      return true;\n    }\n    if (this.selected.length < this.attrs.limits.min.total) {\n      return false;\n    }\n    return primaryCount >= this.attrs.limits.min.primary && secondaryCount >= this.attrs.limits.min.secondary;\n  }\n\n  /**\n   * Add the given tag to the list of selected tags.\n   */\n  addTag(tag) {\n    if (!tag || !this.attrs.canSelect(tag)) return;\n    if (this.attrs.onSelect) {\n      this.attrs.onSelect(tag, this.selected);\n    }\n\n    // If this tag has a parent, we'll also need to add the parent tag to the\n    // selected list if it's not already in there.\n    if (this.attrs.requireParentTag) {\n      const parent = tag.parent();\n      if (parent && !this.selected.includes(parent)) {\n        this.selected.push(parent);\n      }\n    }\n    if (!this.selected.includes(tag)) {\n      this.selected.push(tag);\n    }\n  }\n\n  /**\n   * Remove the given tag from the list of selected tags.\n   */\n  removeTag(tag) {\n    const index = this.selected.indexOf(tag);\n    if (index !== -1) {\n      this.selected.splice(index, 1);\n\n      // Look through the list of selected tags for any tags which have the tag\n      // we just removed as their parent. We'll need to remove them too.\n      if (this.attrs.requireParentTag) {\n        this.selected.filter(t => t.parent() === tag).forEach(this.removeTag.bind(this));\n      }\n      if (this.attrs.onDeselect) {\n        this.attrs.onDeselect(tag, this.selected);\n      }\n    }\n  }\n  toggleTag(tag) {\n    // Won't happen, needed for type safety.\n    if (!this.tags) return;\n    if (this.selected.includes(tag)) {\n      this.removeTag(tag);\n    } else {\n      this.addTag(tag);\n    }\n    if (this.filter()) {\n      this.filter('');\n      this.indexTag = this.tags[0];\n    }\n    this.onready();\n  }\n\n  /**\n   * Gives human text instructions based on the current number of selected tags and set limits.\n   */\n  getInstruction(primaryCount, secondaryCount) {\n    if (this.bypassReqs) {\n      return '';\n    }\n    if (primaryCount < this.attrs.limits.min.primary) {\n      const remaining = this.attrs.limits.min.primary - primaryCount;\n      return extractText(app.translator.trans('flarum-tags.lib.tag_selection_modal.choose_primary_placeholder', {\n        count: remaining\n      }));\n    } else if (secondaryCount < this.attrs.limits.min.secondary) {\n      const remaining = this.attrs.limits.min.secondary - secondaryCount;\n      return extractText(app.translator.trans('flarum-tags.lib.tag_selection_modal.choose_secondary_placeholder', {\n        count: remaining\n      }));\n    } else if (this.selected.length < this.attrs.limits.min.total) {\n      const remaining = this.attrs.limits.min.total - this.selected.length;\n      return extractText(app.translator.trans('flarum-tags.lib.tag_selection_modal.choose_tags_placeholder', {\n        count: remaining\n      }));\n    }\n    return '';\n  }\n\n  /**\n   * Submit tag selection.\n   */\n  onsubmit(e) {\n    e.preventDefault();\n    if (this.attrs.onsubmit) this.attrs.onsubmit(this.selected);\n    this.hide();\n  }\n  select(e) {\n    // Ctrl + Enter submits the selection, just Enter completes the current entry\n    if (e.metaKey || e.ctrlKey || this.indexTag && this.selected.includes(this.indexTag)) {\n      if (this.selected.length) {\n        // The DOM submit method doesn't emit a `submit event, so we\n        // simulate a manual submission so our `onsubmit` logic is run.\n        this.$('button[type=\"submit\"]').click();\n      }\n    } else if (this.indexTag) {\n      this.getItem(this.indexTag)[0].dispatchEvent(new Event('click'));\n    }\n  }\n  selectableItems() {\n    return this.$('.TagSelectionModal-list > li');\n  }\n  getCurrentNumericIndex() {\n    if (!this.indexTag) return -1;\n    return this.selectableItems().index(this.getItem(this.indexTag));\n  }\n  getItem(selectedTag) {\n    return this.selectableItems().filter(`[data-index=\"${selectedTag.id()}\"]`);\n  }\n  setIndex(index, scrollToItem) {\n    const $items = this.selectableItems();\n    const $dropdown = $items.parent();\n    if (index < 0) {\n      index = $items.length - 1;\n    } else if (index >= $items.length) {\n      index = 0;\n    }\n    const $item = $items.eq(index);\n    this.indexTag = app.store.getById('tags', $item.attr('data-index'));\n    m.redraw();\n    if (scrollToItem && this.indexTag) {\n      const dropdownScroll = $dropdown.scrollTop();\n      const dropdownTop = $dropdown.offset().top;\n      const dropdownBottom = dropdownTop + $dropdown.outerHeight();\n      const itemTop = $item.offset().top;\n      const itemBottom = itemTop + $item.outerHeight();\n      let scrollTop;\n      if (itemTop < dropdownTop) {\n        scrollTop = dropdownScroll - dropdownTop + itemTop - parseInt($dropdown.css('padding-top'), 10);\n      } else if (itemBottom > dropdownBottom) {\n        scrollTop = dropdownScroll - dropdownBottom + itemBottom + parseInt($dropdown.css('padding-bottom'), 10);\n      }\n      if (typeof scrollTop !== 'undefined') {\n        $dropdown.stop(true).animate({\n          scrollTop\n        }, 100);\n      }\n    }\n  }\n}\n\n/**\n * Catch invalid limits provided to the tag selection modal.\n */\nfunction catchInvalidLimits(limits) {\n  if (limits.min.primary > limits.max.primary) {\n    throw new Error('The minimum number of primary tags allowed cannot be more than the maximum number of primary tags allowed.');\n  }\n  if (limits.min.secondary > limits.max.secondary) {\n    throw new Error('The minimum number of secondary tags allowed cannot be more than the maximum number of secondary tags allowed.');\n  }\n  if (limits.min.total > limits.max.primary + limits.max.secondary) {\n    throw new Error('The minimum number of tags allowed cannot be more than the maximum number of primary and secondary tags allowed together.');\n  }\n  if (limits.max.total < limits.min.primary + limits.min.secondary) {\n    throw new Error('The maximum number of tags allowed cannot be less than the minimum number of primary and secondary tags allowed together.');\n  }\n  if (limits.min.total > limits.max.total) {\n    throw new Error('The minimum number of tags allowed cannot be more than the maximum number of tags allowed.');\n  }\n}\nflarum.reg.add('flarum-tags', 'common/components/TagSelectionModal', TagSelectionModal);","import Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport classList from 'flarum/common/utils/classList';\n\n/**\n * @TODO move to core\n */\nexport default class ToggleButton extends Component {\n  view(vnode) {\n    const {\n      className,\n      isToggled,\n      ...attrs\n    } = this.attrs;\n    const icon = isToggled ? 'far fa-check-circle' : 'far fa-circle';\n    return m(Button, Object.assign({}, attrs, {\n      icon: icon,\n      className: classList([className, isToggled && 'Button--toggled'])\n    }), vnode.children);\n  }\n}\nflarum.reg.add('flarum-tags', 'forum/components/ToggleButton', ToggleButton);"],"names":["TagSelectionModal","constructor","super","arguments","this","initAttrs","attrs","title","trans","canSelect","allowResetting","limits","min","total","primary","secondary","max","Infinity","Error","catchInvalidLimits","oninit","vnode","navigator","onUp","setIndex","getCurrentNumericIndex","onDown","onSelect","select","bind","onRemove","selected","splice","length","load","then","tags","loading","selectableTags","selectedTags","map","addTag","indexTag","m","redraw","className","lengthWithCJK","text","char","test","content","filter","toLowerCase","primaryCount","secondaryCount","getFilteredTags","inputWidth","Math","getInstruction","focused","onclick","$","focus","tag","removeTag","onready","placeholder","bidi","style","width","onkeydown","navigate","onfocus","onblur","type","disabled","meetsRequirements","icon","id","pinned","position","child","parent","colored","color","includes","active","onmouseover","toggleTag","name","description","allowBypassing","bypassReqs","isToggled","requireParentTag","isPrimaryParent","push","index","indexOf","t","forEach","onDeselect","remaining","count","onsubmit","e","preventDefault","hide","metaKey","ctrlKey","click","getItem","dispatchEvent","Event","selectableItems","selectedTag","scrollToItem","$items","$dropdown","$item","eq","getById","attr","dropdownScroll","scrollTop","dropdownTop","offset","top","dropdownBottom","outerHeight","itemTop","itemBottom","parseInt","css","stop","animate","flarum","reg","add","ToggleButton","view","Object","assign","children"],"sourceRoot":""}