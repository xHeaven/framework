{"version":3,"file":"forum/components/TagDiscussionModal.js","mappings":"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","sources":["webpack://@flarum/tags/./src/forum/components/ToggleButton.js","webpack://@flarum/tags/./src/common/components/TagSelectionModal.tsx","webpack://@flarum/tags/./src/forum/components/TagDiscussionModal.tsx"],"sourcesContent":["import Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport classList from 'flarum/common/utils/classList';\n\n/**\n * @TODO move to core\n */\nexport default class ToggleButton extends Component {\n  view(vnode) {\n    const {\n      className,\n      isToggled,\n      ...attrs\n    } = this.attrs;\n    const icon = isToggled ? 'far fa-check-circle' : 'far fa-circle';\n    return m(Button, Object.assign({}, attrs, {\n      icon: icon,\n      className: classList([className, isToggled && 'Button--toggled'])\n    }), vnode.children);\n  }\n}\nflarum.reg.add('flarum-tags', 'forum/components/ToggleButton', ToggleButton);","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport app from 'flarum/common/app';\nimport Button from 'flarum/common/components/Button';\nimport classList from 'flarum/common/utils/classList';\nimport extractText from 'flarum/common/utils/extractText';\nimport highlight from 'flarum/common/helpers/highlight';\nimport KeyboardNavigatable from 'flarum/common/utils/KeyboardNavigatable';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport FormModal from 'flarum/common/components/FormModal';\nimport Stream from 'flarum/common/utils/Stream';\nimport sortTags from '../utils/sortTags';\nimport tagLabel from '../helpers/tagLabel';\nimport tagIcon from '../helpers/tagIcon';\nimport ToggleButton from '../../forum/components/ToggleButton';\nexport default class TagSelectionModal extends FormModal {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"loading\", true);\n    _defineProperty(this, \"tags\", void 0);\n    _defineProperty(this, \"selected\", []);\n    _defineProperty(this, \"bypassReqs\", false);\n    _defineProperty(this, \"filter\", Stream(''));\n    _defineProperty(this, \"focused\", false);\n    _defineProperty(this, \"navigator\", new KeyboardNavigatable());\n    _defineProperty(this, \"indexTag\", void 0);\n  }\n  static initAttrs(attrs) {\n    super.initAttrs(attrs);\n\n    // Default values for optional attributes.\n    attrs.title ||= extractText(app.translator.trans('flarum-tags.lib.tag_selection_modal.title'));\n    attrs.canSelect ||= () => true;\n    attrs.allowResetting ??= true;\n    attrs.limits = {\n      min: {\n        total: attrs.limits?.min?.total ?? -Infinity,\n        primary: attrs.limits?.min?.primary ?? -Infinity,\n        secondary: attrs.limits?.min?.secondary ?? -Infinity\n      },\n      max: {\n        total: attrs.limits?.max?.total ?? Infinity,\n        primary: attrs.limits?.max?.primary ?? Infinity,\n        secondary: attrs.limits?.max?.secondary ?? Infinity\n      }\n    };\n\n    // Prevent illogical limits from being provided.\n    catchInvalidLimits(attrs.limits);\n  }\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.navigator.onUp(() => this.setIndex(this.getCurrentNumericIndex() - 1, true)).onDown(() => this.setIndex(this.getCurrentNumericIndex() + 1, true)).onSelect(this.select.bind(this)).onRemove(() => this.selected.splice(this.selected.length - 1, 1));\n    app.tagList.load(['parent']).then(tags => {\n      this.loading = false;\n      if (this.attrs.selectableTags) {\n        tags = this.attrs.selectableTags(tags);\n      }\n      this.tags = sortTags(tags);\n      if (this.attrs.selectedTags) {\n        this.attrs.selectedTags.map(this.addTag.bind(this));\n      }\n      this.indexTag = tags[0];\n      m.redraw();\n    });\n  }\n  className() {\n    return classList('TagSelectionModal Modal--simple', this.attrs.className);\n  }\n  title() {\n    return this.attrs.title;\n  }\n  lengthWithCJK(text) {\n    let length = 0;\n    for (const char of text) {\n      length += /[\\u4E00-\\u9FFF\\u3400-\\u4DBF\\uF900-\\uFAFF]/.test(char) ? 2 : 1;\n    }\n    return length;\n  }\n  content() {\n    if (this.loading || !this.tags) {\n      return m(LoadingIndicator, null);\n    }\n    const filter = this.filter().toLowerCase();\n    const primaryCount = this.primaryCount();\n    const secondaryCount = this.secondaryCount();\n    const tags = this.getFilteredTags();\n\n    // 1 CJK character's width equals to 2ch,\n    // so we count 1 CJK character as 2 characters.\n    const inputWidth = Math.max(this.lengthWithCJK(extractText(this.getInstruction(primaryCount, secondaryCount))), this.lengthWithCJK(this.filter()));\n    return [m(\"div\", {\n      className: \"Modal-body\"\n    }, m(\"div\", {\n      className: \"TagSelectionModal-form\"\n    }, m(\"div\", {\n      className: \"TagSelectionModal-form-input\"\n    }, m(\"div\", {\n      className: 'TagsInput FormControl ' + (this.focused ? 'focus' : ''),\n      onclick: () => this.$('.TagsInput input').focus()\n    }, m(\"span\", {\n      className: \"TagsInput-selected\"\n    }, this.selected.map(tag => m(\"span\", {\n      className: \"TagsInput-tag\",\n      onclick: () => {\n        this.removeTag(tag);\n        this.onready();\n      }\n    }, tagLabel(tag)))), m(\"input\", {\n      className: \"FormControl\",\n      placeholder: extractText(this.getInstruction(primaryCount, secondaryCount)),\n      bidi: this.filter,\n      style: {\n        width: inputWidth + 'ch'\n      },\n      onkeydown: this.navigator.navigate.bind(this.navigator),\n      onfocus: () => this.focused = true,\n      onblur: () => this.focused = false\n    }))), m(\"div\", {\n      className: \"TagSelectionModal-form-submit App-primaryControl\"\n    }, m(Button, {\n      type: \"submit\",\n      className: \"Button Button--primary\",\n      disabled: !this.meetsRequirements(primaryCount, secondaryCount),\n      icon: \"fas fa-check\"\n    }, app.translator.trans('flarum-tags.lib.tag_selection_modal.submit_button'))))), m(\"div\", {\n      className: \"Modal-footer\"\n    }, m(\"ul\", {\n      className: \"TagSelectionModal-list SelectTagList\"\n    }, tags.map(tag => m(\"li\", {\n      \"data-index\": tag.id(),\n      className: classList('SelectTagListItem', {\n        pinned: tag.position() !== null,\n        child: !!tag.parent(),\n        colored: !!tag.color(),\n        selected: this.selected.includes(tag),\n        active: this.indexTag === tag\n      }),\n      style: {\n        color: tag.color()\n      },\n      onmouseover: () => this.indexTag = tag,\n      onclick: this.toggleTag.bind(this, tag)\n    }, m(\"i\", {\n      className: \"SelectTagListItem-icon\"\n    }, tagIcon(tag, {\n      className: 'SelectTagListItem-tagIcon'\n    }), m(\"i\", {\n      className: \"icon TagIcon fas fa-check SelectTagListItem-checkIcon\"\n    })), m(\"span\", {\n      className: \"SelectTagListItem-name\"\n    }, highlight(tag.name(), filter)), tag.description() ? m(\"span\", {\n      className: \"SelectTagListItem-description\"\n    }, tag.description()) : ''))), this.attrs.limits.allowBypassing && m(\"div\", {\n      className: \"TagSelectionModal-controls\"\n    }, m(ToggleButton, {\n      className: \"Button\",\n      onclick: () => this.bypassReqs = !this.bypassReqs,\n      isToggled: this.bypassReqs\n    }, app.translator.trans('flarum-tags.lib.tag_selection_modal.bypass_requirements'))))];\n  }\n\n  /**\n   * Filters the available tags on every state change.\n   */\n  getFilteredTags() {\n    const filter = this.filter().toLowerCase();\n    const primaryCount = this.primaryCount();\n    const secondaryCount = this.secondaryCount();\n    let tags = this.tags;\n    if (this.attrs.requireParentTag) {\n      // Filter out all child tags whose parents have not been selected. This\n      // makes it impossible to select a child if its parent hasn't been selected.\n      tags = tags.filter(tag => {\n        const parent = tag.parent();\n        return parent !== null && (parent === false || this.selected.includes(parent));\n      });\n    }\n    if (!this.bypassReqs) {\n      // If we reached the total maximum number of tags, we can't select anymore.\n      if (this.selected.length >= this.attrs.limits.max.total) {\n        tags = tags.filter(tag => this.selected.includes(tag));\n      }\n      // If the number of selected primary/secondary tags is at the maximum, then\n      // we'll filter out all other tags of that type.\n      else {\n        if (primaryCount >= this.attrs.limits.max.primary) {\n          tags = tags.filter(tag => !tag.isPrimaryParent() || this.selected.includes(tag));\n        }\n        if (secondaryCount >= this.attrs.limits.max.secondary) {\n          tags = tags.filter(tag => tag.isPrimaryParent() || this.selected.includes(tag));\n        }\n      }\n    }\n\n    // If the user has entered text in the filter input, then filter by tags\n    // whose name matches what they've entered.\n    if (filter) {\n      tags = tags.filter(tag => tag.name().toLowerCase().includes(filter));\n    }\n    if (!this.indexTag || !tags.includes(this.indexTag)) this.indexTag = tags[0];\n    return tags;\n  }\n\n  /**\n   * Counts the number of selected primary tags.\n   */\n  primaryCount() {\n    return this.selected.filter(tag => tag.isPrimaryParent()).length;\n  }\n\n  /**\n   * Counts the number of selected secondary tags.\n   */\n  secondaryCount() {\n    return this.selected.filter(tag => !tag.isPrimaryParent()).length;\n  }\n\n  /**\n   * Validates the number of selected primary/secondary tags against the set min max limits.\n   */\n  meetsRequirements(primaryCount, secondaryCount) {\n    if (this.bypassReqs || this.attrs.allowResetting && this.selected.length === 0) {\n      return true;\n    }\n    if (this.selected.length < this.attrs.limits.min.total) {\n      return false;\n    }\n    return primaryCount >= this.attrs.limits.min.primary && secondaryCount >= this.attrs.limits.min.secondary;\n  }\n\n  /**\n   * Add the given tag to the list of selected tags.\n   */\n  addTag(tag) {\n    if (!tag || !this.attrs.canSelect(tag)) return;\n    if (this.attrs.onSelect) {\n      this.attrs.onSelect(tag, this.selected);\n    }\n\n    // If this tag has a parent, we'll also need to add the parent tag to the\n    // selected list if it's not already in there.\n    if (this.attrs.requireParentTag) {\n      const parent = tag.parent();\n      if (parent && !this.selected.includes(parent)) {\n        this.selected.push(parent);\n      }\n    }\n    if (!this.selected.includes(tag)) {\n      this.selected.push(tag);\n    }\n  }\n\n  /**\n   * Remove the given tag from the list of selected tags.\n   */\n  removeTag(tag) {\n    const index = this.selected.indexOf(tag);\n    if (index !== -1) {\n      this.selected.splice(index, 1);\n\n      // Look through the list of selected tags for any tags which have the tag\n      // we just removed as their parent. We'll need to remove them too.\n      if (this.attrs.requireParentTag) {\n        this.selected.filter(t => t.parent() === tag).forEach(this.removeTag.bind(this));\n      }\n      if (this.attrs.onDeselect) {\n        this.attrs.onDeselect(tag, this.selected);\n      }\n    }\n  }\n  toggleTag(tag) {\n    // Won't happen, needed for type safety.\n    if (!this.tags) return;\n    if (this.selected.includes(tag)) {\n      this.removeTag(tag);\n    } else {\n      this.addTag(tag);\n    }\n    if (this.filter()) {\n      this.filter('');\n      this.indexTag = this.tags[0];\n    }\n    this.onready();\n  }\n\n  /**\n   * Gives human text instructions based on the current number of selected tags and set limits.\n   */\n  getInstruction(primaryCount, secondaryCount) {\n    if (this.bypassReqs) {\n      return '';\n    }\n    if (primaryCount < this.attrs.limits.min.primary) {\n      const remaining = this.attrs.limits.min.primary - primaryCount;\n      return extractText(app.translator.trans('flarum-tags.lib.tag_selection_modal.choose_primary_placeholder', {\n        count: remaining\n      }));\n    } else if (secondaryCount < this.attrs.limits.min.secondary) {\n      const remaining = this.attrs.limits.min.secondary - secondaryCount;\n      return extractText(app.translator.trans('flarum-tags.lib.tag_selection_modal.choose_secondary_placeholder', {\n        count: remaining\n      }));\n    } else if (this.selected.length < this.attrs.limits.min.total) {\n      const remaining = this.attrs.limits.min.total - this.selected.length;\n      return extractText(app.translator.trans('flarum-tags.lib.tag_selection_modal.choose_tags_placeholder', {\n        count: remaining\n      }));\n    }\n    return '';\n  }\n\n  /**\n   * Submit tag selection.\n   */\n  onsubmit(e) {\n    e.preventDefault();\n    if (this.attrs.onsubmit) this.attrs.onsubmit(this.selected);\n    this.hide();\n  }\n  select(e) {\n    // Ctrl + Enter submits the selection, just Enter completes the current entry\n    if (e.metaKey || e.ctrlKey || this.indexTag && this.selected.includes(this.indexTag)) {\n      if (this.selected.length) {\n        // The DOM submit method doesn't emit a `submit event, so we\n        // simulate a manual submission so our `onsubmit` logic is run.\n        this.$('button[type=\"submit\"]').click();\n      }\n    } else if (this.indexTag) {\n      this.getItem(this.indexTag)[0].dispatchEvent(new Event('click'));\n    }\n  }\n  selectableItems() {\n    return this.$('.TagSelectionModal-list > li');\n  }\n  getCurrentNumericIndex() {\n    if (!this.indexTag) return -1;\n    return this.selectableItems().index(this.getItem(this.indexTag));\n  }\n  getItem(selectedTag) {\n    return this.selectableItems().filter(`[data-index=\"${selectedTag.id()}\"]`);\n  }\n  setIndex(index, scrollToItem) {\n    const $items = this.selectableItems();\n    const $dropdown = $items.parent();\n    if (index < 0) {\n      index = $items.length - 1;\n    } else if (index >= $items.length) {\n      index = 0;\n    }\n    const $item = $items.eq(index);\n    this.indexTag = app.store.getById('tags', $item.attr('data-index'));\n    m.redraw();\n    if (scrollToItem && this.indexTag) {\n      const dropdownScroll = $dropdown.scrollTop();\n      const dropdownTop = $dropdown.offset().top;\n      const dropdownBottom = dropdownTop + $dropdown.outerHeight();\n      const itemTop = $item.offset().top;\n      const itemBottom = itemTop + $item.outerHeight();\n      let scrollTop;\n      if (itemTop < dropdownTop) {\n        scrollTop = dropdownScroll - dropdownTop + itemTop - parseInt($dropdown.css('padding-top'), 10);\n      } else if (itemBottom > dropdownBottom) {\n        scrollTop = dropdownScroll - dropdownBottom + itemBottom + parseInt($dropdown.css('padding-bottom'), 10);\n      }\n      if (typeof scrollTop !== 'undefined') {\n        $dropdown.stop(true).animate({\n          scrollTop\n        }, 100);\n      }\n    }\n  }\n}\n\n/**\n * Catch invalid limits provided to the tag selection modal.\n */\nfunction catchInvalidLimits(limits) {\n  if (limits.min.primary > limits.max.primary) {\n    throw new Error('The minimum number of primary tags allowed cannot be more than the maximum number of primary tags allowed.');\n  }\n  if (limits.min.secondary > limits.max.secondary) {\n    throw new Error('The minimum number of secondary tags allowed cannot be more than the maximum number of secondary tags allowed.');\n  }\n  if (limits.min.total > limits.max.primary + limits.max.secondary) {\n    throw new Error('The minimum number of tags allowed cannot be more than the maximum number of primary and secondary tags allowed together.');\n  }\n  if (limits.max.total < limits.min.primary + limits.min.secondary) {\n    throw new Error('The maximum number of tags allowed cannot be less than the minimum number of primary and secondary tags allowed together.');\n  }\n  if (limits.min.total > limits.max.total) {\n    throw new Error('The minimum number of tags allowed cannot be more than the maximum number of tags allowed.');\n  }\n}\nflarum.reg.add('flarum-tags', 'common/components/TagSelectionModal', TagSelectionModal);","import app from 'flarum/forum/app';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\nimport classList from 'flarum/common/utils/classList';\nimport extractText from 'flarum/common/utils/extractText';\nimport getSelectableTags from '../utils/getSelectableTags';\nimport TagSelectionModal from '../../common/components/TagSelectionModal';\nexport default class TagDiscussionModal extends TagSelectionModal {\n  static initAttrs(attrs) {\n    super.initAttrs(attrs);\n    const title = attrs.discussion ? app.translator.trans('flarum-tags.forum.choose_tags.edit_title', {\n      title: m(\"em\", null, attrs.discussion.title())\n    }) : app.translator.trans('flarum-tags.forum.choose_tags.title');\n    attrs.className = classList(attrs.className, 'TagDiscussionModal');\n    attrs.title = extractText(title);\n    attrs.allowResetting = !!app.forum.attribute('canBypassTagCounts');\n    attrs.limits = {\n      allowBypassing: attrs.allowResetting,\n      max: {\n        primary: app.forum.attribute('maxPrimaryTags'),\n        secondary: app.forum.attribute('maxSecondaryTags')\n      },\n      min: {\n        primary: app.forum.attribute('minPrimaryTags'),\n        secondary: app.forum.attribute('minSecondaryTags')\n      }\n    };\n    attrs.requireParentTag = true;\n    attrs.selectableTags = () => getSelectableTags(attrs.discussion);\n    attrs.selectedTags ??= attrs.discussion?.tags() || [];\n    attrs.canSelect = tag => tag.canStartDiscussion();\n    const suppliedOnsubmit = attrs.onsubmit || null;\n\n    // Save changes.\n    attrs.onsubmit = function (tags) {\n      const discussion = attrs.discussion;\n      if (discussion) {\n        discussion.save({\n          relationships: {\n            tags\n          }\n        }).then(() => {\n          if (app.current.matches(DiscussionPage)) {\n            app.current.get('stream').update();\n          }\n          m.redraw();\n        });\n      }\n      if (suppliedOnsubmit) suppliedOnsubmit(tags);\n    };\n  }\n}\nflarum.reg.add('flarum-tags', 'forum/components/TagDiscussionModal', TagDiscussionModal);"],"names":["ToggleButton","view","vnode","className","isToggled","attrs","this","icon","m","Object","assign","children","flarum","reg","add","TagSelectionModal","constructor","super","arguments","initAttrs","title","trans","canSelect","allowResetting","limits","min","total","primary","secondary","max","Infinity","Error","catchInvalidLimits","oninit","navigator","onUp","setIndex","getCurrentNumericIndex","onDown","onSelect","select","bind","onRemove","selected","splice","length","load","then","tags","loading","selectableTags","sortTags","selectedTags","map","addTag","indexTag","redraw","lengthWithCJK","text","char","test","content","filter","toLowerCase","primaryCount","secondaryCount","getFilteredTags","inputWidth","Math","getInstruction","focused","onclick","$","focus","tag","removeTag","onready","tagLabel","placeholder","bidi","style","width","onkeydown","navigate","onfocus","onblur","type","disabled","meetsRequirements","id","pinned","position","child","parent","colored","color","includes","active","onmouseover","toggleTag","tagIcon","name","description","allowBypassing","bypassReqs","requireParentTag","isPrimaryParent","push","index","indexOf","t","forEach","onDeselect","remaining","count","onsubmit","e","preventDefault","hide","metaKey","ctrlKey","click","getItem","dispatchEvent","Event","selectableItems","selectedTag","scrollToItem","$items","$dropdown","$item","eq","getById","attr","dropdownScroll","scrollTop","dropdownTop","offset","top","dropdownBottom","outerHeight","itemTop","itemBottom","parseInt","css","stop","animate","TagDiscussionModal","discussion","attribute","getSelectableTags","canStartDiscussion","suppliedOnsubmit","save","relationships","matches","get","update"],"sourceRoot":""}